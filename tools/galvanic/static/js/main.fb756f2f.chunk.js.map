{"version":3,"sources":["GalvanicCouples.js","App.js","index.js"],"names":["data","require","matl_list","Object","keys","materials","CoatingList","props","grp1","mat1","grp2","mat2","pair_info","pair","finishes","surface_treatments","concat","finish_1","finish_2","Paper","align","elevation","Grid","container","spacing","item","md","style","textAlign","listStyle","map","f","i","CoupleCard","info","pairs","rating_sea","rating_ma","rating_ia","MaterialList","mat_list","m","value","GalvanicCouples","state","pair_key","handleSubmit","bind","handleChange","e","preventDefault","this","alert","sg","group","sort","setState","target","name","newState","Box","sx","bgcolor","p","Typography","variant","onSubmit","pb","sm","FormControl","htmlFor","id","label","onChange","disabled","xs","Button","type","Component","App","Container","className","CssBaseline","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.fb756f2f.chunk.js","sourcesContent":["import { Component } from \"react\";\r\n//import Select from \"@mui/material/TextField\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\n//import InputLabel from \"@mui/material/InputLabel\";\r\n//import MenuItem from \"@mui/material/MenuItem\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\n//import Card from \"@mui/material/Card\";\r\n//import Container from \"@mui/material/Container\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\nconst data = require(\"./data/galvanic_data.json\");\r\n\r\nconst matl_list = Object.keys(data.materials);\r\n\r\nfunction CoatingList(props) {\r\n    //do stuff\r\n    // get coating group for both materials\r\n    var grp1 = data[\"materials\"][props.mat1]?.[\"group\"] || \"\";\r\n    var grp2 = data[\"materials\"][props.mat2]?.[\"group\"] || \"\";\r\n    var pair_info = data[\"pairs\"]?.[props.pair] || null;\r\n\r\n    // create object containing finish lists based on material group\r\n    // {props.pair[1] : finish_1 -> fin_key[finish_1] -> data.surface_treatments[fin_key],\r\n    //  props.pair[3] : finish_2 -> fin_key[finish_2] -> data.surface_treatments[fin_key]}\r\n    var finishes = pair_info\r\n        ? {\r\n              [props.pair[1]]: data.surface_treatments[\"A.3.\".concat(pair_info.finish_1)],\r\n              [props.pair[3]]: data.surface_treatments[\"A.3.\".concat(pair_info.finish_2)]\r\n          }\r\n        : null;\r\n    // console.log(finishes);\r\n\r\n    return (\r\n        <Paper align=\"center\" elevation={2}>\r\n            <Grid container spacing={2}>\r\n                <Grid item md>\r\n                    Recommended Coatings: {props.mat1}\r\n                    <ul style={{ textAlign: \"left\" }}>\r\n                        <li style={{ listStyle: \"none\" }}>(Most effective)</li>\r\n                        {finishes ? finishes[grp1][\"coating_list\"].map((f, i) => <li key={i}>{f}</li>) : \"...\"}\r\n                        <li style={{ listStyle: \"none\" }}>(Least effective)</li>\r\n                    </ul>\r\n                </Grid>\r\n                <Grid item md>\r\n                    Recommended Coatings: {props.mat2}\r\n                    <ul style={{ textAlign: \"left\" }}>\r\n                        <li style={{ listStyle: \"none\" }}>(Most effective)</li>\r\n                        {finishes ? finishes[grp2][\"coating_list\"].map((f, i) => <li key={i}>{f}</li>) : \"...\"}\r\n                        <li style={{ listStyle: \"none\" }}>(Least effective)</li>\r\n                    </ul>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nfunction CoupleCard(props) {\r\n    // get info for chosen pair\r\n    var info = data.pairs[props.pair];\r\n    //console.log(info);\r\n\r\n    return (\r\n        <Paper align=\"center\" elevation={2}>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td align=\"center\">Material 1: {props.mat1}</td>\r\n                        <td></td>\r\n                        <td align=\"center\">Material 2: {props.mat2}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td align=\"center\">\r\n                            Sea Water (Submerged) Compatibility:\r\n                            <br />\r\n                            {info?.rating_sea || \"-\"}\r\n                        </td>\r\n                        <td></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td align=\"center\">\r\n                            Marine Atmosphere Compatibility:\r\n                            <br />\r\n                            {info?.rating_ma || \"-\"}\r\n                        </td>\r\n                        <td></td>\r\n                        <td align=\"center\">\r\n                            Industrial Atmosphere Compatibility:\r\n                            <br />\r\n                            {info?.rating_ia || \"-\"}\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nfunction MaterialList(props) {\r\n    const { mat_list } = props;\r\n    return mat_list.map((m) => (\r\n        <option key={m} value={m}>\r\n            {m}\r\n        </option>\r\n    ));\r\n}\r\n\r\nexport default class GalvanicCouples extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { mat1: \"\", mat2: \"\", pair_key: \"\" };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const { mat1, mat2 } = this.state;\r\n        if (mat1 === \"\" || mat2 === \"\") {\r\n            alert(\"Please select two materials\");\r\n        } else {\r\n            // get coating group for both materials\r\n            const grp1 = data.materials[mat1].group;\r\n            const grp2 = data.materials[mat2].group;\r\n            const sg = [grp1, grp2].sort();\r\n\r\n            // create (A,B) key\r\n            const pair_key = \"(\".concat(sg[0], \",\", sg[1], \")\");\r\n            //console.log(pair_key);\r\n            this.setState({ pair_key: pair_key });\r\n            //console.log(this.state);\r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        const { name, value } = e.target;\r\n        var newState = this.state;\r\n        newState[name] = value;\r\n        this.setState(newState);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box sx={{ bgcolor: \"#D3D3D3\" }}>\r\n                <Paper align=\"center\" elevation={2}>\r\n                    <Box p={2}>\r\n                    <Typography variant=\"h4\">Galvanic Compatibility of Dissimilar Metals</Typography>\r\n                    <Typography variant=\"h6\" align=\"left\">\r\n                        Overview\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" align=\"left\">\r\n                        This application aims to help visualize galvanic compatibility for material pairs per the data in\r\n                        MIL-STD-889-C, Dissimilar Metals. The first card recreates the information shown in Table I for the\r\n                        chosen material pair. The second card lists the recommended surface treatments in order of descending\r\n                        effectivity per Appendix A.3.\r\n                    </Typography>\r\n                    <br />\r\n                    <Typography variant=\"h6\" align=\"left\">\r\n                        Legend\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" align=\"left\">\r\n                        I: \"Incompatible\" - Significant galvanic corrosion of bare (uncoated) dissimilar metal pair subject to\r\n                        the specific environment. <br />\r\n                        C: \"Compatible\" - Negligible galvanic interaction between bare (uncoated) dissimilar metal pair subject\r\n                        to the specific environment. <br />\r\n                        G: Signifies compatibility of bare (uncoated) same-metal couple subject to the specific environment.\r\n                    </Typography>\r\n                    <br />\r\n                    <Typography variant=\"h6\">Inputs</Typography>\r\n                    </Box>\r\n                    <form onSubmit={this.handleSubmit} pb={2}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item sm>\r\n                                <FormControl>\r\n                                    <label htmlFor=\"mat1-select\">Material 1</label>\r\n                                    <select\r\n                                        id=\"mat1-select\"\r\n                                        name=\"mat1\"\r\n                                        label=\"Material 1\"\r\n                                        value={this.state.mat1}\r\n                                        onChange={this.handleChange}>\r\n                                        <option key=\"blank\" value=\"\" disabled>\r\n                                            -\r\n                                        </option>\r\n                                        <MaterialList mat_list={matl_list} />\r\n                                    </select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item sm>\r\n                                <FormControl>\r\n                                    <label htmlFor=\"mat2-select\">Material 2</label>\r\n                                    <select\r\n                                        id=\"mat2-select\"\r\n                                        name=\"mat2\"\r\n                                        label=\"Material 2\"\r\n                                        value={this.state.mat2}\r\n                                        onChange={this.handleChange}>\r\n                                        <option key=\"blank\" value=\"\" disabled>\r\n                                            -\r\n                                        </option>\r\n                                        <MaterialList mat_list={matl_list} />\r\n                                    </select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                <Button type=\"submit\" variant=\"contained\">\r\n                                    Show Info\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                    <br />\r\n                </Paper>\r\n                <br />\r\n                <CoupleCard mat1={this.state.mat1} mat2={this.state.mat2} pair={this.state.pair_key} />\r\n                <br />\r\n                <CoatingList mat1={this.state.mat1} mat2={this.state.mat2} pair={this.state.pair_key} />\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n","import GalvanicCouples from \"./GalvanicCouples\";\nimport Container from \"@mui/material/Container\"\nimport CssBaseline from \"@mui/material/CssBaseline\";\n\nexport default function App() {\n    return (\n        <Container className=\"App\">\n            <CssBaseline>\n\n                <GalvanicCouples />\n\n            </CssBaseline>\n        </Container>\n    );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <CssBaseline><App /></CssBaseline>\n    \n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}